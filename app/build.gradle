apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
//    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions "default"
        multiDexEnabled true
        resConfigs "zh", "en"//保留中文和英文资源
        ndk {
            abiFilters 'armeabi-v7a' //, 'arm64-v8a'
        }
    }
    //使用Kotlin实验特性
    androidExtensions {
        experimental = true
    }
    kapt {
        correctErrorTypes = true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility rootProject.ext.android.javaSourceCompatibility
        targetCompatibility rootProject.ext.android.javaTargetCompatibility
    }
    //配置不同版本的keystore
    signingConfigs {
        debug {
            storeFile file(STORE_FILE_ABASE)
            storePassword STORE_PASSWORD_ABASE
            keyAlias KEY_ALIAS_ABASE
            keyPassword KEY_PASSWORD_ABASE
        }
        release {
            storeFile file(STORE_FILE_ABASE)
            storePassword STORE_PASSWORD_ABASE
            keyAlias KEY_ALIAS_ABASE
            keyPassword KEY_PASSWORD_ABASE
        }
    }
    buildTypes {
        debug {
            debuggable true
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            zipAlignEnabled true
            shrinkResources true
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
//            assets.srcDirs = ['src/assets', 'src/assets/']
        }
    }
    getApplicationVariants().all { variant ->
        variant.outputs.each { output ->
            //名称
            String appName = ""
            String path = getProjectDir().getPath() + "/src/main/res/values/strings.xml"
            new XmlSlurper().parse(path)."string".find { name ->
                if (name."@name" == "app_name") {
                    appName = name
                    return true
                }
            }
            //正式版还是测试版
            String typeName = buildType.name
            typeName = typeName.substring(0, 1).toUpperCase() + typeName.substring(1).toLowerCase()
            //build名称
            String buildVer = String.valueOf(rootProject.ext.android.versionCode)
            String buildName = "_build" + buildVer
            //编译日期
            String buildTime = "_" + String.valueOf(rootProject.ext.android.buildTime)
            //打包的电脑
            String computer = "_" + String.valueOf(rootProject.ext.android.computer)
            //后缀名
            String suffix = ".apk"
            //生成输出文件名称
            String fileName = "${appName}${typeName}${buildName}${buildTime}${computer}${suffix}"
            //是否需要删除旧文件APK
            boolean needDelOldApk = false
            //输入文件设置
            if (needDelOldApk) outputFileName = fileName
            else getAssembleProvider().configure() {
                it.doLast { //解决Android Studio3.6删除安卓包的问题
                    String buildEndTime = "_${new Date().format("yyyyMMdd_HHmm")}"
                    fileName = "${appName}${typeName}${buildName}${buildEndTime}${computer}${suffix}"
                    project.copy {
                        from("${output.outputFile}")
                        into("${output.outputFile.parent}")
                        rename("${output.outputFile.name}", "${fileName}")
                    }
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation project(":ybase")
    implementation 'com.tencent.bugly:crashreport:3.1.9'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.1'
    //https://github.com/airbnb/lottie-android
    implementation 'com.airbnb.android:lottie:3.4.1'
    //https://github.com/JeremyLiao/LiveEventBus
    implementation 'com.jeremyliao:live-event-bus-x:1.7.2'
    //web https://github.com/Justson/AgentWeb
    implementation 'com.just.agentweb:agentweb:4.1.3'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.2'
    //https://github.com/square/leakcanary
//    implementation 'com.squareup.leakcanary:leakcanary-android:2.2'
    //防崩溃
    implementation 'cat.ereza:customactivityoncrash:2.3.0'
    //管理界面状态库
//    implementation 'com.kingja.loadsir:loadsir:1.3.6'
    //指示器库
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.afollestad.material-dialogs:core:3.3.0'
    implementation 'com.afollestad.material-dialogs:color:3.3.0'
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.1'
    implementation 'com.scwang.smart:refresh-header-classics:2.0.1'
    implementation 'io.coil-kt:coil:0.11.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'cn.finalteam:okhttpfinal:2.0.7'
    implementation 'com.yanzhenjie:andserver:1.0.3'
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.3'
    implementation 'com.tencent.bugly:crashreport:latest.release'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    // recycler 分割线
    implementation 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    implementation files('libs/mina-core-2.0.16.jar')
    implementation files('libs/slf4j-api-1.7.21.jar')

    implementation files('libs/zmsdk.aar')
    implementation files('libs/wuji.aar')
    implementation files('libs/TemplateMatch.aar')
    implementation files('libs/lloglib.aar')


}
//放在这省的忘
//@SuppressLint("ParcelCreator")
//@Parcelize
